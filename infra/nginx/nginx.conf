# WebSocket connection upgrade map
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    server_name localhost dev.local; # replace with sarkis.dev for production

    # Enable detailed logging for development
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Keycloak static resources
    location /resources/ {
        proxy_pass http://keycloak:8080/resources/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Keycloak routes - handle all /keycloak/* requests
    location /keycloak/ {
        proxy_pass http://keycloak:8080/;
        
        # Essential headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Prefix /keycloak;
        
        # Keycloak buffer settings
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Development timeouts (longer for debugging)
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # WebSocket support for Keycloak admin console
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Task Service API - More specific routing
    location /api/tasks/ {
        proxy_pass http://todo-list:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add authentication headers passthrough
        proxy_set_header Authorization $http_authorization;
        
        # API timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s; # Longer for complex operations
    }

    # Next.js API routes (catch remaining /api/* before frontend)
    location /api/ {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass through auth headers
        proxy_set_header Authorization $http_authorization;
    }

    # Next.js static assets optimization
    location /_next/static/ {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        
        # Caching for static assets (adjust for development vs production)
        add_header Cache-Control "public, max-age=3600"; # 1 hour for dev
        # For production, use: "public, max-age=31536000, immutable"
    }

    # Next.js webpack HMR (Hot Module Replacement) - Critical for dev
    location /_next/webpack-hmr {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Frontend - serve Next.js app (catch-all)
    location / {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support for Next.js hot reload
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_cache_bypass $http_upgrade;
        
        # Development timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Future services (ready for when you add them)
    # Finance Service API
    # location /api/finance/ {
    #     proxy_pass http://finance-service:8001/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header Authorization $http_authorization;
    # }

    # Calendar Service API
    # location /api/calendar/ {
    #     proxy_pass http://calendar-service:8002/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header Authorization $http_authorization;
    # }

    # Obfuscated admin routes (change these tokens for production!)
    # Example: /admin/db-a1b2c3d4e5f6/
    location /admin/db-a1b2c3d4e5f6/ {
        # Optional: IP whitelist for extra security
        # allow 192.168.1.0/24;   # Your office network
        # allow 10.0.0.0/8;       # VPN range
        # deny all;

        # Optional: Extra safe layer
        # auth_basic "Admin Area";
        # auth_basic_user_file /etc/nginx/.htpasswd;

        proxy_pass http://pgadmin:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle pgAdmin's redirect issues
        proxy_redirect off;
        proxy_set_header X-Script-Name /admin/db-a1b2c3d4e5f6;
        proxy_set_header X-Forwarded-Prefix /admin/db-a1b2c3d4e5f6;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "Gateway healthy\n";
        add_header Content-Type text/plain;
    }

    # nginx status for monitoring
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
}